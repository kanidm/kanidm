[package]
name = "kanidmd_web_ui"
description = "Kanidm Server Web User Interface"
documentation = "https://docs.rs/kanidm/latest/kanidm/"

version.workspace = true
authors.workspace = true
rust-version.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

# These are ignored because the crate is in a workspace
#[profile.release]
# less code to include into binary

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
compact_jwt = { workspace = true, default-features = false, features = ["unsafe_release_without_verify"] }
gloo.workspace = true
gloo-net.workspace = true
js-sys.workspace = true
kanidm_proto = { workspace = true, features = ["wasm"] }
qrcode = { workspace = true, default-features = false, features = ["svg"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde-wasm-bindgen.workspace = true
uuid.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
wasm-bindgen-test.workspace = true
yew.workspace = true
yew-agent.workspace = true
yew-router.workspace = true

[dependencies.web-sys]
workspace = true
features = [
    "AuthenticationExtensionsClientOutputs",
    "AuthenticatorResponse",
    "CredentialCreationOptions",
    "CredentialRequestOptions",
    "CredentialsContainer",
    "DomTokenList",
    "Element",
    "Event",
    "FocusEvent",
    "FormData",
    "Headers",
    "HtmlButtonElement",
    "HtmlDocument",
    "HtmlFormElement",
    "Navigator",
    "PublicKeyCredential",
    "PublicKeyCredentialCreationOptions",
    "PublicKeyCredentialRpEntity",
    "PublicKeyCredentialUserEntity",
    "Request",
    "RequestCredentials",
    "RequestInit",
    "RequestMode",
    "RequestRedirect",
    "Response",
    "Window",
]

